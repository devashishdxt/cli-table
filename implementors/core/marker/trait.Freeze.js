(function() {var implementors = {};
implementors["cli_table"] = [{"text":"impl Freeze for Cell","synthetic":true,"types":[]},{"text":"impl Freeze for Row","synthetic":true,"types":[]},{"text":"impl Freeze for Table","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for CellFormat","synthetic":true,"types":[]},{"text":"impl Freeze for CellFormatBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Padding","synthetic":true,"types":[]},{"text":"impl Freeze for PaddingBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Border","synthetic":true,"types":[]},{"text":"impl Freeze for BorderBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for HorizontalLine","synthetic":true,"types":[]},{"text":"impl Freeze for Separator","synthetic":true,"types":[]},{"text":"impl Freeze for SeparatorBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for TableFormat","synthetic":true,"types":[]},{"text":"impl Freeze for TableFormatBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for VerticalLine","synthetic":true,"types":[]},{"text":"impl Freeze for Align","synthetic":true,"types":[]},{"text":"impl Freeze for Justify","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()