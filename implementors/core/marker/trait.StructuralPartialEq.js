(function() {var implementors = {};
implementors["cli_table"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"cli_table/format/struct.VerticalLine.html\" title=\"struct cli_table::format::VerticalLine\">VerticalLine</a>","synthetic":false,"types":["cli_table::table::VerticalLine"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"cli_table/format/struct.HorizontalLine.html\" title=\"struct cli_table::format::HorizontalLine\">HorizontalLine</a>","synthetic":false,"types":["cli_table::table::HorizontalLine"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"cli_table/format/struct.Border.html\" title=\"struct cli_table::format::Border\">Border</a>","synthetic":false,"types":["cli_table::table::Border"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"cli_table/format/struct.BorderBuilder.html\" title=\"struct cli_table::format::BorderBuilder\">BorderBuilder</a>","synthetic":false,"types":["cli_table::table::BorderBuilder"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"cli_table/format/struct.Separator.html\" title=\"struct cli_table::format::Separator\">Separator</a>","synthetic":false,"types":["cli_table::table::Separator"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()