var searchIndex = JSON.parse('{\
"cli_table":{"doc":"Rust crate for printing tables on command line.","t":[0,4,13,13,13,4,13,13,13,3,3,3,3,3,3,3,3,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,24,8,10,3,8,10,3,8,10,10,10,10,10,10,10,8,10,3,8,10,8,10,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["format","Align","Top","Bottom","Center","Justify","Left","Right","Center","Padding","PaddingBuilder","Border","BorderBuilder","HorizontalLine","Separator","SeparatorBuilder","VerticalLine","Color","Black","Blue","Green","Red","Cyan","Magenta","Yellow","White","Ansi256","Rgb","ColorChoice","Always","AlwaysAnsi","Auto","Never","Table","Cell","cell","CellStruct","Row","row","RowStruct","Style","foreground_color","background_color","bold","underline","italic","intense","dimmed","Table","table","TableStruct","Title","title","WithTitle","with_title","print_stdout","print_stderr","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","fmt","fmt","clone","clone","from_str","eq","ne","eq","cell","row","foreground_color","background_color","bold","underline","italic","intense","dimmed","foreground_color","background_color","bold","underline","italic","intense","dimmed","table","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","try_from","justify","align","padding","builder","left","right","top","bottom","build","title","border","separator","color_choice","new","new","builder","top","bottom","left","right","build","builder","column","row","title","build"],"q":["cli_table","cli_table::format","","","","","","","","","","","","","","","","cli_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cli_table::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cli_table","","","","","","","","","","","","","","cli_table::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cli_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cli_table::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cli_table","","","","cli_table::format","","","","","","cli_table","","","","cli_table::format","","","","","","","","","","","",""],"d":["Utilities for formatting of a table","Used to vertically align contents of a cell","Aligns contents to top","Aligns contents to bottom","Aligns contents to center","Used to horizontally justify contents of a cell","Justifies contents to left","Justifies contents to right","Justifies contents to center","Used to add padding to the contents of a cell","Builder for padding","Borders of a table","Builder for border","A horizontal line in a table (border or row separator)","Inner (column/row) separators of a table","Builder for separator","A vertical line in a table (border or column separator)","The set of available colors for the terminal …","","","","","","","","","","","ColorChoice represents the color preferences of an end …","Try very hard to emit colors. This includes emitting ANSI …","AlwaysAnsi is like Always, except it never tries to use …","Try to use colors, but don’t force the issue. If the …","Never emit colors.","Derive macro to implementing <code>cli_table</code> traits","Trait to convert raw types into cells","Converts raw type to cell of a table","Concrete cell of a table","Trait to convert raw types into rows","Converts raw type to rows of a table","Concrete row of a table","Trait for modifying style of table and cells","Used to set foreground color","Used to set background color","Used to set contents to be bold","Used to set contents to be underlined","Used to set contents to be italic","Used to set high intensity version of a color specified","Used to set contents to be dimmed","Trait to convert raw type into table","Converts raw type to a table","Struct for building a table on command line","Trait for getting title row of a struct","Returns title row of a struct","Trait for creating a table with titles at the top","Creates a table with title at the top","Prints a table to <code>stdout</code>","Prints a table to <code>stderr</codesed to horizontally justify contents of a cell","Used to vertically align the contents of a cell","Used to add padding to the contents of a cell","Creates a new builder for padding","Sets left padding of a cell","Sets right padding of a cell","Sets top padding of a cell","Sets bottom padding of a cell","Build padding","Used to add a title row of a table","Used to set border of a table","Used to set column/row separators of a table","Used to set the color preferences for printing the table","Creates a new instance of vertical line","Creates a new instance of horizontal line","Creates a new builder for border","Set top border of a table","Set bottom border of a table","Set left border of a table","Set right border of a table","Build border","Creates a new builder for separator","Set column separators of a table","Set column separators of a table","Set title of a table","Build separator"],"i":[0,0,1,1,1,0,2,2,2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,4,4,4,4,0,0,5,0,0,6,0,0,7,7,7,7,7,7,7,0,8,0,0,9,0,10,0,0,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,3,4,4,3,3,3,3,4,11,14,11,11,11,11,11,11,11,15,15,15,15,15,15,15,15,2,1,12,16,17,18,19,20,2,1,12,13,16,17,18,20,16,16,17,17,18,18,19,19,20,20,2,1,12,13,16,17,18,19,20,21,15,11,11,11,12,13,13,13,13,13,15,15,15,15,16,17,18,19,19,19,19,19,20,21,21,21,21],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["cellstruct",3]],null,null,[[],["rowstruct",3]],null,null,[[["option",4],["color",4]]],[[["option",4],["color",4]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],null,[[],["tablestruct",3]],null,null,[[],["rowstruct",3]],null,[[],["tablestruct",3]],[[["table",8]],["result",6]],[[["table",8]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["colorchoice",4]],[[],["color",4]],[[["str",15]],[["color",4],["parsecolorerror",3],["result",4]]],[[["color",4]],["bool",15]],[[["color",4]],["bool",15]],[[["colorchoice",4]],["bool",15]],[[],["cellstruct",3]],[[],["rowstruct",3]],[[["option",4],["color",4]]],[[["option",4],["color",4]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["option",4],["color",4]]],[[["option",4],["color",4]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[],["tablestruct",3]],[[],["justify",4]],[[],["align",4]],[[],["padding",3]],[[],["verticalline",3]],[[],["horizontalline",3]],[[],["border",3]],[[],["borderbuilder",3]],[[],["separator",3]],[[]],[[]],[[],["padding",3]],[[],["paddingbuilder",3]],[[]],[[]],[[]],[[]],[[["verticalline",3]],["bool",15]],[[["verticalline",3]],["bool",15]],[[["horizontalline",3]],["bool",15]],[[["horizontalline",3]],["bool",15]],[[["border",3]],["bool",15]],[[["border",3]],["bool",15]],[[["borderbuilder",3]],["bool",15]],[[["borderbuilder",3]],["bool",15]],[[["separator",3]],["bool",15]],[[["separator",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["reader",3]],["result",4]],[[["justify",4]],["cellstruct",3]],[[["align",4]],["cellstruct",3]],[[["padding",3]],["cellstruct",3]],[[],["paddingbuilder",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["padding",3]],[[["row",8]]],[[["border",3]]],[[["separator",3]]],[[["colorchoice",4]]],[[["char",15]]],[[["char",15]]],[[],["borderbuilder",3]],[[["horizontalline",3]]],[[["horizontalline",3]]],[[["verticalline",3]]],[[["verticalline",3]]],[[],["border",3]],[[],["separatorbuilder",3]],[[["verticalline",3],["option",4]]],[[["horizontalline",3],["option",4]]],[[["horizontalline",3],["option",4]]],[[],["separator",3]]],"p":[[4,"Align"],[4,"Justify"],[4,"Color"],[4,"ColorChoice"],[8,"Cell"],[8,"Row"],[8,"Style"],[8,"Table"],[8,"Title"],[8,"WithTitle"],[3,"CellStruct"],[3,"Padding"],[3,"PaddingBuilder"],[3,"RowStruct"],[3,"TableStruct"],[3,"VerticalLine"],[3,"HorizontalLine"],[3,"Border"],[3,"BorderBuilder"],[3,"Separator"],[3,"SeparatorBuilder"]]},\
"cli_table_derive":{"doc":"Rust crate for printing tables on command line.","t":[24],"n":["Table"],"q":["cli_table_derive"],"d":["Derive macro to implementing <code>cli_table</code> traits"],"i":[0],"f":[null],"p":[]}\
}');
initSearch(searchIndex);