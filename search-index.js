var searchIndex = JSON.parse('{\
"cli_table":{"doc":"Rust crate for printing tables on command line.","t":[13,13,13,13,13,13,8,3,4,4,13,13,13,13,13,13,8,3,8,8,24,3,8,13,8,13,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,0,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,5,5,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,4,3,3,13,13,13,3,4,13,3,3,13,3,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Always","AlwaysAnsi","Ansi256","Auto","Black","Blue","Cell","CellStruct","Color","ColorChoice","Cyan","Green","Magenta","Never","Red","Rgb","Row","RowStruct","Style","Table","Table","TableStruct","Title","White","WithTitle","Yellow","align","background_color","background_color","background_color","bold","bold","bold","border","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cell","cell","clone","clone","clone_into","clone_into","color_choice","dimmed","dimmed","dimmed","eq","eq","fmt","fmt","foreground_color","foreground_color","foreground_color","format","from","from","from","from","from","from_str","intense","intense","intense","into","into","into","into","into","italic","italic","italic","justify","ne","padding","print_stderr","print_stdout","row","row","separator","table","table","title","title","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","underline","underline","underline","with_title","Align","Border","BorderBuilder","Bottom","Center","Center","HorizontalLine","Justify","Left","Padding","PaddingBuilder","Right","Separator","SeparatorBuilder","Top","VerticalLine","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","build","build","build","builder","builder","builder","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","left","left","ne","ne","ne","ne","ne","new","new","right","right","row","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["cli_table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cli_table::format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Try very hard to emit colors. This includes emitting ANSI …","AlwaysAnsi is like Always, except it never tries to use …","","Try to use colors, but don’t force the issue. If the …","","","Trait to convert raw types into cells","Concrete cell of a table","The set of available colors for the terminal …","ColorChoice represents the color preferences of an end …","","","","Never emit colors.","","","Trait to convert raw types into rows","Concrete row of a table","Trait for modifying style of table and cells","Trait to convert raw type into table","Derive macro to implementing <code>cli_table</code> traits","Struct for building a table on command line","Trait for getting title row of a struct","","Trait for creating a table with titles at the top","","Used to vertically align the contents of a cell","Used to set background color","","","Used to set contents to be bold","","","Used to set border of a table","","","","","","","","","","","Converts raw type to cell of a table","","","","","","Used to set the color preferences for printing the table","Used to set contents to be dimmed","","","","","","","Used to set foreground color","","","Utilities for formatting of a table","","","","","","","Used to set high intensity version of a color specified","","","","","","","","Used to set contents to be italic","","","Used to horizontally justify contents of a cell","","Used to add padding to the contents of a cell","Prints a table to <code>stderr</code>","Prints a table to <code>stdout</code>","Converts raw type to rows of a table","","Used to set column/row separators of a table","Converts raw type to a table","","Returns title row of a struct","Used to add a title row of a table","","","","","","","","","","","","","","","","","","","Used to set contents to be underlined","","","Creates a table with title at the top","Used to vertically align contents of a cell","Borders of a table","Builder for border","Aligns contents to bottom","Justifies contents to center","Aligns contents to center","A horizontal line in a table (border or row separator)","Used to horizontally justify contents of a cell","Justifies contents to left","Used to add padding to the contents of a cell","Builder for padding","Justifies contents to right","Inner (column/row) separators of a table","Builder for separator","Aligns contents to top","A vertical line in a table (border or column separator)","","","","","","","","","","","","","","","","","","","","","Sets bottom padding of a cell","Set bottom border of a table","Build padding","Build border","Build separator","Creates a new builder for padding","Creates a new builder for border","Creates a new builder for separator","","","","","","","","","","","","","","","","","Set column separators of a table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets left padding of a cell","Set left border of a table","","","","","","Creates a new instance of vertical line","Creates a new instance of horizontal line","Sets right padding of a cell","Set right border of a table","Set column separators of a table","Set title of a table","","","","","","","","","Sets top padding of a cell","Set top border of a table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,2,1,2,2,0,0,0,0,2,2,2,1,2,2,0,0,0,0,0,0,0,2,0,2,3,4,3,5,4,3,5,5,3,6,5,1,2,3,6,5,1,2,7,3,1,2,1,2,5,4,3,5,1,2,1,2,4,3,5,0,3,6,5,1,2,2,4,3,5,3,6,5,1,2,4,3,5,3,2,3,0,0,8,6,5,9,5,10,5,1,2,3,6,5,5,1,2,3,6,5,1,2,3,6,5,1,2,4,3,5,11,0,0,0,12,13,12,0,0,13,0,0,13,0,0,12,0,13,12,14,15,16,17,18,19,20,21,13,12,14,15,16,17,18,19,20,21,15,19,15,19,21,14,18,20,13,12,14,16,17,18,19,20,13,12,14,16,17,18,19,20,21,13,12,14,15,16,17,18,20,16,17,18,19,20,13,12,14,15,16,17,18,19,20,21,13,12,14,15,16,17,18,19,20,21,13,12,14,15,16,17,18,19,20,21,15,19,16,17,18,19,20,16,17,15,19,21,21,13,12,14,16,17,18,19,20,15,19,13,12,14,15,16,17,18,19,20,21,13,12,14,15,16,17,18,19,20,21,13,12,14,15,16,17,18,19,20,21],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["align",4]],["cellstruct",3]],[[["option",4],["color",4]]],[[["option",4],["color",4]]],[[["option",4],["color",4]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["border",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cellstruct",3]],[[],["cellstruct",3]],[[],["colorchoice",4]],[[],["color",4]],[[]],[[]],[[["colorchoice",4]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["colorchoice",4]],["bool",15]],[[["color",4]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["option",4],["color",4]]],[[["option",4],["color",4]]],[[["option",4],["color",4]]],null,[[]],[[]],[[]],[[]],[[]],[[["str",15]],[["color",4],["parsecolorerror",3],["result",4]]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["justify",4]],["cellstruct",3]],[[["color",4]],["bool",15]],[[["padding",3]],["cellstruct",3]],[[["table",8]],["result",6]],[[["table",8]],["result",6]],[[],["rowstruct",3]],[[],["rowstruct",3]],[[["separator",3]]],[[],["tablestruct",3]],[[],["tablestruct",3]],[[],["rowstruct",3]],[[["row",8]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["reader",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[],["tablestruct",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["horizontalline",3]]],[[],["padding",3]],[[],["border",3]],[[],["separator",3]],[[],["paddingbuilder",3]],[[],["borderbuilder",3]],[[],["separatorbuilder",3]],[[],["justify",4]],[[],["align",4]],[[],["padding",3]],[[],["verticalline",3]],[[],["horizontalline",3]],[[],["border",3]],[[],["borderbuilder",3]],[[],["separator",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["option",4],["verticalline",3]]],[[]],[[]],[[],["padding",3]],[[],["paddingbuilder",3]],[[]],[[]],[[]],[[]],[[["verticalline",3]],["bool",15]],[[["horizontalline",3]],["bool",15]],[[["border",3]],["bool",15]],[[["borderbuilder",3]],["bool",15]],[[["separator",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["verticalline",3]]],[[["verticalline",3]],["bool",15]],[[["horizontalline",3]],["bool",15]],[[["border",3]],["bool",15]],[[["borderbuilder",3]],["bool",15]],[[["separator",3]],["bool",15]],[[["char",15]]],[[["char",15]]],[[["usize",15]]],[[["verticalline",3]]],[[["option",4],["horizontalline",3]]],[[["option",4],["horizontalline",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["horizontalline",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"ColorChoice"],[4,"Color"],[3,"CellStruct"],[8,"Style"],[3,"TableStruct"],[3,"RowStruct"],[8,"Cell"],[8,"Row"],[8,"Table"],[8,"Title"],[8,"WithTitle"],[4,"Align"],[4,"Justify"],[3,"Padding"],[3,"PaddingBuilder"],[3,"VerticalLine"],[3,"HorizontalLine"],[3,"Border"],[3,"BorderBuilder"],[3,"Separator"],[3,"SeparatorBuilder"]]},\
"cli_table_derive":{"doc":"Rust crate for printing tables on command line.","t":[24],"n":["Table"],"q":["cli_table_derive"],"d":["Derive macro to implementing <code>cli_table</code> traits"],"i":[0],"f":[null],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};